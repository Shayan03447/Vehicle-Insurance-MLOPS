1: Create project template by executing template.py file
2: Write the code on setup.py and pyproject.toml file to import local packages
    >>Find more about  "setup.py" and "pyproject.toml" at crashcourse.txt
3: Create a virtual envirnoment, activate it, and install the requirements from requirements.txt
    conda create -n vehicle python=3.10 -y
    conda activate vehicle
    add requirement modules to requirements.txt
    Do "pip install -r requirements.txt"
4: Do a "pip install" on terminal to make sure you have local packages installed
    
---------------------MONGODB---------------------
5: Signup to MONGODB Atlas and create a new project by just providing it a name then next next create.
6: From "Create a cluster" screen, hit "create", Select MO service keeping other service default, hit "create deploymrnt"
7: Setup the username and password and then create DB user
8: Go to "network access" and add ip-address - "0.0.0.0/0" So that we can access it from anywhere,(Allow access from anywhere)
9: Go back to the project >>"Get connection string" >> "Drivers" >>{Driver:python , Version:3.6 or later}
    Copy and save the connection string with you (replace password). >>Done
10: Dataset added to notebook folder
11: Create folder "notebook" >> create file "mongoDB_demo.ipynb" >>Select kernel>python kerne>>vehicle>>
12: Dataset added to notebook folder
13: Push your data to mongodb database from your notebook
14: Go to mongodb atlas >> Database >>browse collection >> See your data in the key format

----------------------------Logging, exception and notebook------------------------------
15: Write the logger file and test it on demo.py
16: Write the exception file and test it on the demo.py
17: EDA and feature engineering notebook added

------------------------------Data_Injestion------------------------------
18: Before we work on data injestion component >> Declare variables wth constants.__init__.py >>
    and code to configuration.mongo_db_connections.py file and define the function for mongo_db connection >>
    inside "data_access", add code to  proj1_data that will use mongo_db_connections.py
    to connect with DB, fetch data in key-val format and transform that to df >>
    add code to entity.config_entity.py file till DataIngestionConfig class >>
    add code to entity.config_entity.py file till DataIngestionArtifact class
    add code to components.data_ingestion.py file >> add code to training pipeline >>
    run demo.py (set mongo_db_connections_url first,see next step)
19: To setup the connection url on mac(also work for windows), open bash/powershell terminal and run below command:
--------------------For bash---------------------
    set: export MONGODB_URL="mongodb+srv://<username>:<password>
    check: echo $MONGODB_URL
------------------------For powershell
    set: $env: MONGODB_URL="mongodb+srv://<username>:<password>
    check: echo $env:MONGODB_URL
    To setup the connection url on windows, open env variable setting option and add a new variable:
    Name: MONGODB_URL, Value = <url>
    Also add "Artifact" dir to .gitignore file

shanich03447
WsCC1kce5ZJcBAvK
$env:MONGODB_URL= "mongodb+srv://shanich03447:WsCC1kce5ZJcBAvK"
set MONGODB_URL=mongodb+srv://shanich03447:WsCC1kce5ZJcBAvK@cluster0.0aygk.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0

